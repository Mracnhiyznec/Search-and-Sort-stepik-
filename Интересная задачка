#Проходя курс алгоритмов сортировки и поиска на stepik наткнулся на потрясающую задачу по моему мнению
#Условие:Палиндром - это строка, которая читается одинаково как справа налево, так и слева направо. 

На вход программы поступает набор заглавных латинских букв. Разрешается переставлять буквы, а также удалять некоторые буквы. Требуется из данных букв по указанным правилам составить палиндром наибольшей длины, а если таких палиндромов несколько, то выбрать первый из них в алфавитном порядке.

Входные данные

В первой строке входных данных содержится число N 
(
1
≤
 
N
 
≤
1
0
5
)
(1≤ N ≤10^5).
Во второй строке задается последовательность из N заглавных латинских букв (буквы записаны без пробелов).
Попробуйте решить сами! А я приведу свою решение, которое, прошло все тесы на stepik
#python3
from string import *
n = int(input())
s = ascii_uppercase
sl = {"A":0, "B":0, "C":0, "D":0, "E":0, "F":0, "G": 0, "H":0, "I":0, "J":0, "K":0, "L": 0, "M":0, "N": 0, "O":0, "P": 0, "Q":0,"R":0 , "S":0, "T":0, "U":0, "V":0, "W": 0, "X":0, "Y":0, "Z":0}
n = input()
for c in n:
    sl[c]+=1
s = ""
s_1 = ""
maxi_nechet = -10e9
bukva = ""
listik = []
for c in sl:
        s+=c*(sl[c]//2)
        s_1+=c*(sl[c]//2)
        sl[c] = sl[c] - (sl[c] // 2) - (sl[c] // 2)
bukva = ""
for c in sl:
    if sl[c] == 1:
        bukva = c
        break
print(s+bukva+s_1[::-1])
#Корявое решение, но тем не менее! 
